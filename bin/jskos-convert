#!/usr/bin/env node

const program = require("../lib/cli")
const convert = require("../lib/convert-action")
const { guessObjectType } = require("jskos-tools")

program
  .usage("[options] [type] [files...]")
  .option("-f, --from <format>","input format (ndjson or csv)")
  .option("-t, --to <format>","output format (ndjson, csv, nt)")
  .option("-c, --clean", "cleanup input data")
  .option("-v, --validate","validate and omit invalid records")
  .option("-l, --language <lang>", "include labels (use '-' for any language)")
  .option("-r, --registry <file>", "registry file with schemes, types... to look up")
  .option("-s, --scheme <uri|notation|file>", "concept scheme to convert concepts or mappings")
  .option("-d, --destination <uri|notation|file>", "target scheme to convert mappings")
  .option("-p, --partof <uri>", "concordance URI")
  .option("-m, --marktop", "explicitly mark concepts without broader as top concepts")
  .option("--creator <uri and/or name>", "add creator to mappings")
  .example("mappings -t csv mappings.ndjson")
  .example("concepts -r registry.json -s example http://example.org/jskos.csv")

const args = program.parseArgs(process.argv)

let type = (guessObjectType(args[0], true) || "").toLowerCase()
if (type) {
  args.shift()
} else {
  type = "concept"
}

const files = args.length ? args : ["-"]
const options = program.opts()

convert(options, type, files)
