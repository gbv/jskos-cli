#!/usr/bin/env node

const fs = require("fs")
const { validate } = require("jskos-tools")
const args = process.argv.slice(2)

function usage(message) {
  console.log("Usage: jskos-validate [item|concept|...] files...")
  if (message) {
    console.log("")
    console.log(message)
  }
  process.exit(-1)
}

if (!args.length) {
  usage()
}

let type = "item"

if (args[0] in validate || args[0].replace(/s$/,"") in validate) {
  type = args.shift().replace(/s$/,"")
} else if (!fs.existsSync(args[0])) {
  usage(`unknown object type: ${args[0]}`)
}

let fail = 0

args.forEach( (file, i) => {
  let json = fs.readFileSync(file).toString()
  let data = file.match(/\.ndjson$/)
    ? json.split(/\n/).filter(Boolean).map(JSON.parse) 
    : JSON.parse(json)
  let objects = Array.isArray(data) ? data : [data]
  let ok = objects.every(obj => validate[type](obj))

  let msg = process.stdout.isTTY
    ? `${ok ? "\x1b[32mok    " : "\x1b[31mnot ok"} ${i+1} - ${file}\x1b[0m`
    : `${ok ? "ok    " : "not ok"} ${i+1} - ${file}`
  console.log(msg)
  if (fail < 99 && !ok) fail++
})

process.exit(fail)
